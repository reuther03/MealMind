// <auto-generated />
using System;
using MealMind.Modules.Nutrition.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MealMind.Modules.Nutrition.Infrastructure.Database.Migrations
{
    [DbContext(typeof(NutritionDbContext))]
    [Migration("20250904165835_AddedNutritionTarget")]
    partial class AddedNutritionTarget
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("nutrition")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MealMind.Modules.Nutrition.Domain.UserProfile.NutritionTarget", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Calories")
                        .HasColumnType("integer");

                    b.Property<int>("Carbohydrates")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("DeactivatedAt")
                        .HasColumnType("date");

                    b.Property<int>("Fats")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Protein")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uuid");

                    b.Property<int>("WaterIntake")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId");

                    b.ToTable("NutritionTarget", "nutrition");
                });

            modelBuilder.Entity("MealMind.Modules.Nutrition.Domain.UserProfile.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("UserProfile", "nutrition");
                });

            modelBuilder.Entity("MealMind.Modules.Nutrition.Domain.UserProfile.NutritionTarget", b =>
                {
                    b.HasOne("MealMind.Modules.Nutrition.Domain.UserProfile.UserProfile", null)
                        .WithMany("NutritionTargets")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MealMind.Modules.Nutrition.Domain.UserProfile.UserProfile", b =>
                {
                    b.OwnsOne("MealMind.Modules.Nutrition.Domain.UserProfile.PersonalData", "PersonalData", b1 =>
                        {
                            b1.Property<Guid>("UserProfileId")
                                .HasColumnType("uuid");

                            b1.Property<string>("ActivityLevel")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("ActivityLevel");

                            b1.Property<DateOnly>("DateOfBirth")
                                .HasColumnType("date")
                                .HasColumnName("DateOfBirth");

                            b1.Property<string>("Gender")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Gender");

                            b1.Property<decimal>("Height")
                                .HasPrecision(5, 2)
                                .HasColumnType("numeric(5,2)")
                                .HasColumnName("Height");

                            b1.Property<decimal>("Weight")
                                .HasPrecision(6, 3)
                                .HasColumnType("numeric(6,3)")
                                .HasColumnName("Weight");

                            b1.HasKey("UserProfileId");

                            b1.ToTable("UserProfile_PersonalData", "nutrition");

                            b1.WithOwner()
                                .HasForeignKey("UserProfileId");
                        });

                    b.Navigation("PersonalData")
                        .IsRequired();
                });

            modelBuilder.Entity("MealMind.Modules.Nutrition.Domain.UserProfile.UserProfile", b =>
                {
                    b.Navigation("NutritionTargets");
                });
#pragma warning restore 612, 618
        }
    }
}
